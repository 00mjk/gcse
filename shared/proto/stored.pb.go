// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/daviddengcn/gcse/shared/proto/stored.proto

package gcsepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PackageCrawlHistoryReq struct {
	Package string `protobuf:"bytes,1,opt,name=package" json:"package,omitempty"`
}

func (m *PackageCrawlHistoryReq) Reset()                    { *m = PackageCrawlHistoryReq{} }
func (m *PackageCrawlHistoryReq) String() string            { return proto.CompactTextString(m) }
func (*PackageCrawlHistoryReq) ProtoMessage()               {}
func (*PackageCrawlHistoryReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *PackageCrawlHistoryReq) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

type PackageCrawlHistoryResp struct {
}

func (m *PackageCrawlHistoryResp) Reset()                    { *m = PackageCrawlHistoryResp{} }
func (m *PackageCrawlHistoryResp) String() string            { return proto.CompactTextString(m) }
func (*PackageCrawlHistoryResp) ProtoMessage()               {}
func (*PackageCrawlHistoryResp) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func init() {
	proto.RegisterType((*PackageCrawlHistoryReq)(nil), "gcse.PackageCrawlHistoryReq")
	proto.RegisterType((*PackageCrawlHistoryResp)(nil), "gcse.PackageCrawlHistoryResp")
}

func init() {
	proto.RegisterFile("github.com/daviddengcn/gcse/shared/proto/stored.proto", fileDescriptor2)
}

var fileDescriptor2 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x49, 0x2c, 0xcb, 0x4c, 0x49, 0x49, 0xcd, 0x4b,
	0x4f, 0xce, 0xd3, 0x4f, 0x4f, 0x2e, 0x4e, 0xd5, 0x2f, 0xce, 0x48, 0x2c, 0x4a, 0x4d, 0xd1, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x4d, 0xd1, 0x03, 0x73, 0x84, 0x58,
	0x40, 0xf2, 0x4a, 0x46, 0x5c, 0x62, 0x01, 0x89, 0xc9, 0xd9, 0x89, 0xe9, 0xa9, 0xce, 0x45, 0x89,
	0xe5, 0x39, 0x1e, 0x99, 0x20, 0x35, 0x95, 0x41, 0xa9, 0x85, 0x42, 0x12, 0x5c, 0xec, 0x05, 0x10,
	0x19, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x18, 0x57, 0x49, 0x92, 0x4b, 0x1c, 0xab, 0x9e,
	0xe2, 0x02, 0xa3, 0x24, 0x2e, 0x9e, 0x60, 0x90, 0x25, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0x41, 0x5c, 0xc2, 0x58, 0x94, 0x0a, 0xc9, 0xe8, 0x81, 0x2c, 0xd7, 0xc3, 0x6e, 0xb3, 0x94,
	0x2c, 0x1e, 0xd9, 0xe2, 0x02, 0x27, 0x8e, 0x28, 0x36, 0x90, 0x7c, 0x41, 0x52, 0x12, 0x1b, 0xd8,
	0x27, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x20, 0xcf, 0x28, 0x38, 0x02, 0x01, 0x00, 0x00,
}
